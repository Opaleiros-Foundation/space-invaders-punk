// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SpaceInvaders.Data;

#nullable disable

namespace SpaceInvaders.Migrations
{
    [DbContext(typeof(SpaceInvadersDbContext))]
    [Migration("20250806014201_AddPlayerRelationships")]
    partial class AddPlayerRelationships
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SpaceInvaders.Models.Alien", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("character varying(13)");

                    b.Property<int>("Health")
                        .HasColumnType("integer");

                    b.Property<double>("Height")
                        .HasColumnType("double precision");

                    b.Property<bool>("IsVisible")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ScoreValue")
                        .HasColumnType("integer");

                    b.Property<string>("SpritePath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("WeaponId")
                        .HasColumnType("integer");

                    b.Property<double>("Width")
                        .HasColumnType("double precision");

                    b.Property<double>("X")
                        .HasColumnType("double precision");

                    b.Property<double>("Y")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("WeaponId");

                    b.ToTable("Aliens");

                    b.HasDiscriminator().HasValue("Alien");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("SpaceInvaders.Models.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("CanShoot")
                        .HasColumnType("boolean");

                    b.Property<int>("Health")
                        .HasColumnType("integer");

                    b.Property<double>("Height")
                        .HasColumnType("double precision");

                    b.Property<bool>("IsVisible")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Score")
                        .HasColumnType("integer");

                    b.Property<string>("SpritePath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Width")
                        .HasColumnType("double precision");

                    b.Property<double>("X")
                        .HasColumnType("double precision");

                    b.Property<double>("Y")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("SpaceInvaders.Models.Projectile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Damage")
                        .HasColumnType("integer");

                    b.Property<int>("Health")
                        .HasColumnType("integer");

                    b.Property<double>("Height")
                        .HasColumnType("double precision");

                    b.Property<bool>("IsVisible")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PlayerId")
                        .HasColumnType("integer");

                    b.Property<int>("Speed")
                        .HasColumnType("integer");

                    b.Property<string>("SpritePath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Width")
                        .HasColumnType("double precision");

                    b.Property<double>("X")
                        .HasColumnType("double precision");

                    b.Property<double>("Y")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.ToTable("Projectiles");
                });

            modelBuilder.Entity("SpaceInvaders.Models.Shield", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Health")
                        .HasColumnType("integer");

                    b.Property<double>("Height")
                        .HasColumnType("double precision");

                    b.Property<bool>("IsVisible")
                        .HasColumnType("boolean");

                    b.Property<int>("MaxHealth")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SpritePath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Width")
                        .HasColumnType("double precision");

                    b.Property<double>("X")
                        .HasColumnType("double precision");

                    b.Property<double>("Y")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("Shields");
                });

            modelBuilder.Entity("SpaceInvaders.Models.Weapon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Damage")
                        .HasColumnType("integer");

                    b.Property<double>("FireRate")
                        .HasColumnType("double precision");

                    b.Property<int>("PlayerId")
                        .HasColumnType("integer");

                    b.Property<string>("ProjectileSpritePath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId")
                        .IsUnique();

                    b.ToTable("Weapons");
                });

            modelBuilder.Entity("SpaceInvaders.Models.Aliens.AlienType1", b =>
                {
                    b.HasBaseType("SpaceInvaders.Models.Alien");

                    b.HasDiscriminator().HasValue("AlienType1");
                });

            modelBuilder.Entity("SpaceInvaders.Models.Aliens.AlienType2", b =>
                {
                    b.HasBaseType("SpaceInvaders.Models.Alien");

                    b.HasDiscriminator().HasValue("AlienType2");
                });

            modelBuilder.Entity("SpaceInvaders.Models.Aliens.AlienType3", b =>
                {
                    b.HasBaseType("SpaceInvaders.Models.Alien");

                    b.HasDiscriminator().HasValue("AlienType3");
                });

            modelBuilder.Entity("SpaceInvaders.Models.Aliens.AlienType4", b =>
                {
                    b.HasBaseType("SpaceInvaders.Models.Alien");

                    b.HasDiscriminator().HasValue("AlienType4");
                });

            modelBuilder.Entity("SpaceInvaders.Models.Alien", b =>
                {
                    b.HasOne("SpaceInvaders.Models.Weapon", "Weapon")
                        .WithMany()
                        .HasForeignKey("WeaponId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Weapon");
                });

            modelBuilder.Entity("SpaceInvaders.Models.Projectile", b =>
                {
                    b.HasOne("SpaceInvaders.Models.Player", "Player")
                        .WithMany("Projectiles")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");
                });

            modelBuilder.Entity("SpaceInvaders.Models.Weapon", b =>
                {
                    b.HasOne("SpaceInvaders.Models.Player", "Player")
                        .WithOne("Weapon")
                        .HasForeignKey("SpaceInvaders.Models.Weapon", "PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");
                });

            modelBuilder.Entity("SpaceInvaders.Models.Player", b =>
                {
                    b.Navigation("Projectiles");

                    b.Navigation("Weapon")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
